#!/bin/python3

import math
import os
import random
import re
import sys

#
# Complete the 'waiter' function below.
#
# The function is expected to return an INTEGER_ARRAY.
# The function accepts following parameters:
#  1. INTEGER_ARRAY number
#  2. INTEGER q
#

def waiter(number, q):
    # num is inital stack
    # q is how far to go
    lower = 2
    upper = 10000
    prime = [i for i in range(lower, upper + 1) if all(i % j != 0 for j in range(2, i))]
    answers = []
    
    for i in range(q):
        a = []
        b = []

        for j in range(len(number)-1, -1, -1):
            if number[j] % prime[i] == 0:
                b.append(number.pop())
            else:
                a.append(number.pop())                
        
        if b:
            for j in range(len(b)):
                answers.append(b.pop())
        if a:
            if i ==q-1:
                for j in range(len(a)):
                    answers.append(a.pop())
            else:
                number = a
                
    print(answers)            
    return answers       

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    first_multiple_input = input().rstrip().split()

    n = int(first_multiple_input[0])

    q = int(first_multiple_input[1])

    number = list(map(int, input().rstrip().split()))

    result = waiter(number, q)

    fptr.write('\n'.join(map(str, result)))
    fptr.write('\n')

    fptr.close()
